---
version: '3'

volumes:
  data-postgres: {}
  data-opennms: {}
  data-opennms-cfg: {}
  data-grafana: {}

networks:
  net.stuttgart:
      driver: bridge
      ipam:
        config:
          - subnet: 172.30.0.0/16
  net.fulda:
      driver: bridge
      ipam:
        config:
          - subnet: 172.31.0.0/16
services:
  database:
    image: ${DOCKER_REGISTRY:-docker.io}/postgres:${POSTGRES_VERSION:-15}
    environment:
      TZ: Europe/Berlin
      POSTGRES_HOST: database
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - data-postgres:/var/lib/postgresql/data
    networks:
      net.stuttgart:
        ipv4_address: 172.30.0.10

  horizon:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_ORG:-opennms}/${HORIZON_OCI:-horizon}:${ONMS_VERSION:-latest}
    networks:
      net.stuttgart:
        ipv4_address: 172.30.0.11
    environment:
      - TZ=Europe/Berlin
    depends_on:
      - database
    volumes:
      - data-opennms:/opennms-data
      - data-opennms-cfg:/opt/opennms/etc
      - ./container-fs/horizon/opt/opennms/deploy:/opt/opennms/deploy
      - ./container-fs/horizon/opt/opennms-overlay:/opt/opennms-overlay
      - ./container-fs/horizon/etc/conf.d/confd.toml:/etc/confd/confd.toml
    command: ["-s"]
    ports:
      - '8980:8980'
      - '8101:8101'
      - '61616:61616/tcp'
      - '162:10162/udp'

  grafana:
    image: docker.io/grafana/grafana:8.5.20
    hostname: grafana
    depends_on:
      - horizon
    networks:
      net.stuttgart:
        ipv4_address: 172.30.0.13
    environment:
      - TZ=${TIMEZONE:-America/New_York}
      - GF_INSTALL_PLUGINS=https://github.com/OpenNMS/opennms-helm/releases/download/v8.0.4/opennms-helm-app-8.0.4.zip;opennms-helm-app,grafana-piechart-panel,neocat-cal-heatmap-panel,briangann-datatable-panel
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - data-grafana:/var/lib/grafana
      - ./container-fs/grafana:/etc/grafana/provisioning/
    ports:
      - "3000:3000/tcp"

  minion-fulda-01:
    image: ${DOCKER_REGISTRY:-docker.io}/${DOCKER_ORG:-opennms}/${MINION_OCI:-minion}:${ONMS_VERSION:-latest}
    environment:
      TZ: ${TIMEZONE:-America/New_York}
      JAVA_MIN_MEM: 512M
      JAVA_MAX_MEM: 2048M
    networks:
      net.stuttgart:
        ipv4_address: 172.30.0.12
      net.fulda:
        ipv4_address: 172.31.0.12
    volumes:
      - ./container-fs/minion/opt/minion/minion-config.yaml:/opt/minion/minion-config.yaml
    command: ["-f"]
    healthcheck:
      test: "/health.sh"
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "8201:8201/tcp"

  srv-stuttgart-01:
    image: quay.io/labmonkeys/net-snmp:5.9.3-r0.b1425
    networks:
      net.stuttgart:
        ipv4_address: 172.30.0.32
    environment:
      - TZ=Europe/Berlin

  srv-stuttgart-02:
    image: quay.io/labmonkeys/net-snmp:5.9.3-r0.b1425
    networks:
      net.stuttgart:
        ipv4_address: 172.30.0.33
    environment:
      - TZ=Europe/Berlin

  web-stuttgart-01:
    image: httpd
    networks:
      net.stuttgart:
        ipv4_address: 172.30.0.34
    environment:
      - TZ=Europe/Berlin

  srv-fulda-01:
    image: quay.io/labmonkeys/net-snmp:5.9.3-r0.b1425
    networks:
      net.fulda:
        ipv4_address: 172.31.0.32
    environment:
      - TZ=Europe/Berlin

  srv-fulda-02:
    image: quay.io/labmonkeys/net-snmp:5.9.3-r0.b1425
    networks:
      net.fulda:
        ipv4_address: 172.31.0.33
    environment:
      - TZ=Europe/Berlin
  web-fulda-01:
    image: httpd
    networks:
      net.fulda:
        ipv4_address: 172.31.0.34
    environment:
      - TZ=Europe/Berlin
